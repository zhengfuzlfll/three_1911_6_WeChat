<!--pages/home/home.wxml-->
<!-- <text>pages/home/home.wxml</text>222 -->

<!-- view类似于div,text类似于span,image类似于img -->
<!-- 顶级标签为page标签 -->
<!-- <ul>
  <li>列表1</li>
  <li>列表2</li>
</ul> -->
<!-- <view class="ul">
  <view class="li">列表1</view>
  <view class="li">列表2</view>
  <view class="li">列表3</view>
  <view class="li">列表4</view>
  <view class="li">列表5</view>
  <view class="li">列表6</view>
  <view class="li">列表7</view>
  <view class="li">列表8</view>
  <view class="li">列表9</view>
  <view class="li">列表10</view>
  <view class="li">列表11</view>
  <view class="li">列表12</view>
  <view class="li">列表13</view>
  <view class="li">列表14</view>
  <view class="li">列表15</view>
</view> -->

<!-- swiper滑块视图容器-->
<!-- *this 代表的就是自己  -->
<!-- 其中只可放置swiper-item组件，否则会导致未定义的⾏为。 -->
<swiper indicator-dots="{{true}}" autoplay="{{true}}">
  <swiper-item wx:for="{{bannerlist}}" wx:key="*this" >
    <image mode="{{widthFix}}" src="{{'http://daxun.kuboy.top'+item}}"></image>
  </swiper-item>
  
  <!-- <swiper-item>
    <image src="https://res.wx.qq.com/mpres/zh_CN/htmledition/pages/login/loginpage/images/bg_banner49d02a.png"></image>
  </swiper-item> -->
</swiper>

<!-- 父子组件传参 》》》》》》》》》》》》》》》》》》》》》》》》》-->
<!-- 
  vue 父组件给子组件传值>>>>>>>>>>>>>>>>>>
  父组件在调用子组件的地方，添加一个自定义的属性，属性的值就是需要传递给子组件的值，
  如果属性的值是变量、boolean、number数据，需要使用绑定属性

  子组件定义的地方，添加一个props选项，props选项的值是一个数组或者对象

  1.如果是数组，数组的元素就是自定义的属性名，可以在组件中通过此自定义属性名访问数据
  2.如果是对象，有两种形式，
    2.1 key值为自定义的属性名，value值为数据类型
    2.2 key值为自定义的属性名，value为一个对象，该对象有两个选项，一个为type（数据类型），一个未default（默认值）,如果默认值是对象或者数组，需要把default写为一个函数，返回对象和数组
 -->

 <!-- 小程序>>>>>>>>>>>>>>>>>>>>>
  父组件在调用子组件的地方，添加一个自定义的属性，属性的值就是需要传递给子组件的值，
  如果属性的值是变量、boolean、number数据，需要使用{{}}包裹
  <prolist prolist="{{prolist}}"/>
  子组件定义的地方，添加一个properties选项，properties选项的值是一个对象

  key值为自定义的属性名，value值为数据类型
  properties: {
    prolist: Array
  }

  可以在组件中通过此自定义属性名访问数据

 -->

<!-- 1、父组件传递数据 =》 2、prolist.js接收数据 =》3、prolist.wxml渲染-->
<prolist prolist="{{prolist}}"></prolist>
<!-- 组件化后可用单标签或双标签 -->
<!-- <prolist /> -->

<!-- 返回顶部  -->
<!-- 绑定事件 
    vue v-on:click=""
    react onClick={this.clickFn}
    minpro(小程序)  移动端尽量不适用click事件，建议使用tap事件,或者使用touch代替click事件（click会出现点击穿透，双击方法屏幕）
        bindtap
        catchtap -----阻止冒泡
        事件不加括号（）
-->
<!--  >100显示，< 100隐藏 -->
<view class="totop" bindtap="backtop" wx:if="{{flage}}">
  <image src="/resources/toTop.png"></image>
  <view>返回顶部</view>
</view>


<!-- 首页的列表进入详情页 -->
<!-- 
 声明式导航
    vue <router-link></router-link>
    react <Link></Link> <NavLink></NavLink>
  编程式导航
    new Vue({router, store, el: ''})
    vue this.$router.push() replace() back() go()
    react this.props.history.push() .......
 -->

 <!-- 小程序
  声明式导航 navigator  标签跳转
https://developers.weixin.qq.com/miniprogram/dev/component/navigator.html
<navigator url="" open-type=""></navigator>
    open-type
        navigate 保留当前页面，新添加一个页面，不能新添加tab页面 ---- push
        redirect 替换当前页面，不能替换tab页面  ---- replace
        switchTab 切换当前的tab页面 ---  小程序独属
        navigateBack 返回  ----  back  goBack

》》》》》》》》》》》》》》在prolist组件中添加跳转

  编程式导航  - js跳转 - window.location.href=""
https://developers.weixin.qq.com/miniprogram/dev/api/route/wx.switchTab.html
 
  -->

